name: "Build website"

env:
  VERSION: 3.10

inputs:
  # DEPLOYMENT OPTIONS
  SITE_FOLDER:
    required: false
    default: ""
  BASE_URL_PREFIX:
    required: false
    default: ""
  PREVIEW:
    required: false
    default: ""
  DEPLOY:
    required: false
    default: true
  DEPLOY_BRANCH:
    required: false
    default: "gh-pages"
  UPLOAD_ARTIFACTS:
    required: false
    default: false
  LUNR:
    required: false
    default: false
  LUNR_BUILDER:
    required: false
    default: "_libs/lunr/build_index.js"

  # FRANKLIN OPTIONS
  JULIA_VERSION:
    required: false
    default: 1
  FRANKLIN_REPO:
    required: false
    default: "https://github.com/tlienart/Xranklin.jl"
  FRANKLIN_VERSION:
    required: false
    default: ""
  FRANKLIN_BRANCH:
    required: false
    default: "main"

  # BUILD OPTIONS
  JULIA_PRE:
    required: false
    default: ""
  JULIA_POST:
    required: false
    default: ""
  PYTHON_LIBS:
    required: false
    default: ""
  DISPLAY_SERVER:
    required: false
    default: ""
  LATEX:
    required: false
    default: false
  GNUPLOT:
    required: false
    default: false

  # ONLY FOR XRANKLIN DEVELOPMENT PURPOSES, SHOULD NOT BE USED BY USER
  TTFX:
    required: false
    default: false

runs:
  using: "composite"
  steps:
    # ============ #
    # DEPENDENCIES #
    # ============ #
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
      if: inputs.PYTHON_LIBS != ''

    - run: |
        pip install ${{ inputs.PYTHON_LIBS }}
        export PYTHON=$(which python)
      if: ${{ inputs.PYTHON_LIBS != '' }}
      shell: bash

    # Apt-get update if necessary
    - run: |
        sudo apt-get update -qq
      if: ${{ inputs.PLOTS != '' || inputs.LATEX == 'true' || inputs.GNUPLOT == 'true' }}
      shell: bash

    # QT dependencies for Plots with GR backend
    - run: |
        sudo apt-get install -y qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools
      if: ${{ inputs.PLOTS != '' }}
      shell: bash

    # LaTeX* deps for PGFPlotsX etc
    - run: |
        sudo apt install -y pdf2svg texlive-latex-base texlive-binaries texlive-pictures texlive-latex-extra texlive-luatex
      if: ${{ inputs.LATEX == 'true' }}
      shell: bash

    # Gnuplot for Gaston etc
    - run: |
        sudo apt-get install -y gnuplot
      if: ${{ inputs.GNUPLOT == 'true' }}
      shell: bash

    # ================ #
    # BUILDING WEBSITE #
    # ================ #
    # Julia
    - uses: julia-actions/setup-julia@v1
      with:
        version: ${{ inputs.JULIA_VERSION }}

    # Building website
    - run: |
        ${{ inputs.DISPLAY_SERVER }} julia --color=yes "$GITHUB_ACTION_PATH"/main.jl
      env:
        JULIA_PRE:        ${{ inputs.JULIA_PRE }}
        PYTHON_LIBS:      ${{ inputs.PYTHON_LIBS }}
        SITE_FOLDER:      ${{ inputs.SITE_FOLDER }}
        LUNR:             ${{ inputs.LUNR }}
        LUNR_BUILDER:     ${{ inputs.LUNR_BUILDER }}
        BASE_URL_PREFIX:  ${{ inputs.BASE_URL_PREFIX }}
        PREVIEW:          ${{ inputs.PREVIEW }}
        JULIA_POST:       ${{ inputs.JULIA_POST }}
        FRANKLIN_REPO:    ${{ inputs.FRANKLIN_REPO }}
        FRANKLIN_VERSION: ${{ inputs.FRANKLIN_VERSION }}
        FRANKLIN_BRANCH:  ${{ inputs.FRANKLIN_BRANCH  }}        
      shell: bash

    # ============================ #
    # TTFX (only for Xranklin dev) #
    # ============================ #
    - uses: actions/checkout@v4
      with:
        ref: gh-ttfx
        path: ttfx
      if: ${{ (inputs.TTFX == 'true') && (inputs.DEPLOY == 'true') }}

    # OR pipe ensures continue on fail
    - run: |
           rm -rf ${{ inputs.SITE_FOLDER }}/__site/ttfx || true
           mv ttfx/ttfx ${{ inputs.SITE_FOLDER }}/__site/. || true
      shell: bash
      if: ${{ (inputs.TTFX == 'true') && (inputs.DEPLOY == 'true') }}

    # ========= #
    # ARTIFACTS #
    # ========= #
    - uses: actions/upload-artifact@v4
      with:
        name: website
        path: ${{ inputs.SITE_FOLDER }}__site
      if: ${{ (inputs.UPLOAD_ARTIFACTS == 'true') }}

    # ========== #
    # DEPLOYMENT #
    # ========== #
    - run: |
        touch ${{ inputs.SITE_FOLDER }}__site/.nojekyll
      if: ${{ inputs.DEPLOY == 'true' }}
      shell: bash

    - uses: JamesIves/github-pages-deploy-action@releases/v4
      with:
        BRANCH: ${{ inputs.DEPLOY_BRANCH }}
        FOLDER: ${{ inputs.SITE_FOLDER }}__site
        TARGET-FOLDER: "${{ inputs.PREVIEW }}"
      if: ${{ inputs.DEPLOY == 'true' }}
